---
import Base from '@layouts/Base.astro';
import Page from '@layouts/Page.astro';
---

<style>
  .sala-picker-container {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 12px;
    margin-bottom: 20px;
  }

  label {
    font-weight: 500;
    color: #ccc;
  }

  .btn-gmaps {
    display: none;
    text-decoration: none;
    padding: 0.5rem 1rem;
    background-color: #f90;
    color: #000;
    border-radius: 4px;
    font-weight: 600;
    transition: background-color 0.3s;
    white-space: nowrap;
  }

  .btn-gmaps:hover {
    background-color: #ffb233;
  }

  #map {
    height: 400px;
    width: 100%;
    border: 1px solid #444;
    border-radius: 6px;
    overflow: hidden;
  }

  /* Nuevos estilos para el buscador */
  .search-container {
    position: relative;
    width: 100%;
    flex: 1;
  }

  #search-input {
    width: 100%;
    height: 2.5rem;
    padding: 0 12px;
    border: 1px solid #666;
    background-color: #ffffff; /* Fondo oscuro para el input */
    color: #000000; /* Texto claro para contraste */
    border-radius: 4px;
    font-size: 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  #search-input::placeholder {
    color: #ccc; /* Un poco más claro para el placeholder */
  }

  #results-list {
    position: absolute;
    top: 100%; 
    left: 0;
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    background: #fff;
    border: 1px solid #666;
    border-radius: 0 0 4px 4px;
    z-index: 9999; 
    display: none;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);

    margin-top: 2px; 
  }

  .result-item {
    padding: 8px;
    cursor: pointer;
    color: #f0f0f0; 
    font-size: 0.9rem;
    background: #444; 
  }

  .result-item:hover {
    background: #555; 
  }

  /* Media queries para móviles */
  @media (max-width: 768px) {
    .sala-picker-container {
      flex-direction: column;
      align-items: stretch;
    }

    .btn-gmaps {
      width: 100%;
      text-align: center;
    }
  }

  .leaflet-marker-icon {
    background: none;
    border: none;
  }

  .created-by {
    margin-top: 10px;
    text-align: center;
    font-size: 0.8rem;
    color: #000;
  }

  @media (prefers-color-scheme: dark) {
    .created-by {
      color: #fff;
    }
  }
</style>

<script>
  import L from 'leaflet';
  import 'leaflet/dist/leaflet.css';

  let map;
  let marcadorActual = null;
  let salas = [];

  const customIcon = L.icon({
    iconUrl: '/images/marker/ubi.png',
    iconRetinaUrl: '/images/marker/ubi.png',
    iconSize: [30, 30],
    iconAnchor: [15, 30],
    popupAnchor: [0, -30],
    shadowUrl: null,
  });

  function normalizeString(str) {
    return str
      .toLowerCase()
      .normalize('NFD')
      .replace(/[\u0300-\u036f]/g, '');
  }

  // Función para extraer códigos de sala (como FIS201, B26, etc.)
  function extractRoomCodes(str) {
    // Busca patrones como letras seguidas de números o solo números
    const matches = str.match(/[a-z]+\d+|\d+[a-z]+|\d+/gi) || [];
    return matches.map(m => m.toLowerCase());
  }

  // Lista de prefijos comunes que pueden ser intercambiables
  const commonPrefixes = ['sala', 'lab', 'laboratorio', 'auditorio', 'aula', 'edificio', 'piso'];

  // Función para calcular la relevancia de un resultado de búsqueda
  function calculateRelevance(salaName, searchWords) {
    const normalizedSalaName = normalizeString(salaName);
    const salaWords = normalizedSalaName.split(/\s+/);
    
    // Extraer códigos de sala tanto del nombre de la sala como de la búsqueda
    const salaCodes = extractRoomCodes(normalizedSalaName);
    const searchCodes = [];
    searchWords.forEach(word => {
      const codes = extractRoomCodes(word);
      searchCodes.push(...codes);
    });
    
    let matches = 0;
    let exactMatches = 0;
    let codeMatches = 0;
    
    // Verificar coincidencias de códigos (mayor prioridad)
    if (searchCodes.length > 0) {
      searchCodes.forEach(searchCode => {
        salaCodes.forEach(salaCode => {
          if (salaCode === searchCode) {
            codeMatches += 3; // Alta prioridad para coincidencias exactas de código
          } else if (salaCode.includes(searchCode) || searchCode.includes(salaCode)) {
            codeMatches += 2; // Prioridad media para coincidencias parciales de código
          }
        });
      });
    }
    
    // Verificar coincidencias exactas y parciales
    searchWords.forEach(searchWord => {
      // Si la palabra de búsqueda está completa en el nombre de la sala
      if (normalizedSalaName.includes(searchWord)) {
        matches++;
        
        // Si la palabra de búsqueda coincide exactamente con una palabra en el nombre
        if (salaWords.includes(searchWord)) {
          exactMatches++;
        }
      } 
      // Verificar coincidencias parciales
      else {
        // Verificar si alguna palabra de la sala contiene la palabra de búsqueda
        for (const salaWord of salaWords) {
          if (salaWord.includes(searchWord) || searchWord.includes(salaWord)) {
            matches += 0.5;
            break;
          }
        }
        
        // Manejo especial para prefijos comunes
        if (commonPrefixes.includes(searchWord)) {
          for (const prefix of commonPrefixes) {
            if (salaWords.includes(prefix)) {
              matches += 0.3; // Dar algún valor a la coincidencia entre prefijos comunes
              break;
            }
          }
        }
      }
    });
    
    // Verificar si hay palabras que comparten inicios similares
    for (const searchWord of searchWords) {
      if (searchWord.length >= 3) { // Solo para palabras con cierta longitud
        for (const salaWord of salaWords) {
          // Si comparten al menos los primeros 3 caracteres
          if (salaWord.length >= 3 && searchWord.substring(0, 3) === salaWord.substring(0, 3)) {
            matches += 0.2;
          }
        }
      }
    }
    
    return {
      matches,
      exactMatches,
      codeMatches,
      // Mayor puntuación para coincidencias de código, seguido de coincidencias exactas, y luego coincidencias parciales
      score: codeMatches * 10 + exactMatches * 5 + matches
    };
  }

  function handleSearchInput() {
    const searchInput = document.getElementById('search-input');
    const searchTerm = normalizeString(searchInput.value);
    const resultsList = document.getElementById('results-list');

    resultsList.innerHTML = '';

    if (!searchTerm) {
      resultsList.style.display = 'none';
      return;
    }

    // Dividir el término de búsqueda en palabras individuales
    const searchWords = searchTerm.split(/\s+/).filter(word => word.length > 0);
    
    // Filtrar salas que tengan al menos una coincidencia parcial
    const scoredResults = salas
      .map(sala => {
        const relevance = calculateRelevance(sala.name, searchWords);
        return {
          sala,
          ...relevance
        };
      })
      .filter(result => result.score > 0)
      .sort((a, b) => b.score - a.score); // Ordenar por puntuación descendente

    // Mostrar resultados en la lista
    scoredResults.forEach((result) => {
      const div = document.createElement('div');
      div.className = 'result-item';
      div.textContent = result.sala.name;
      div.onclick = () => selectSala(result.sala);
      resultsList.appendChild(div);
    });

    resultsList.style.display = scoredResults.length ? 'block' : 'none';
  }

  function selectSala(selectedSala) {
    const searchInput = document.getElementById('search-input');
    const resultsList = document.getElementById('results-list');
    const gmapsLink = document.getElementById('gmaps-link');

    searchInput.value = selectedSala.name;
    resultsList.style.display = 'none';

    const [lng, lat] = selectedSala.cords;

    if (map) {
      map.setView([lat, lng], 18);

      if (marcadorActual) {
        map.removeLayer(marcadorActual);
      }

      marcadorActual = L.marker([lat, lng], { icon: customIcon }).addTo(map);
      marcadorActual
        .bindPopup(
          `
                <div style="
                    background-color: #000;
                    color: #fff;
                    padding: 8px;
                    border-radius: 4px;
                    text-align: center;
                    font-family: Arial, sans-serif;
                ">
                    <strong style="font-size:14px;">${selectedSala.name}</strong>
                </div>
            `
        )
        .openPopup();

      if (gmapsLink) {
        gmapsLink.href = `https://www.google.com/maps?q=${lat},${lng}`;
        gmapsLink.style.display = 'inline-block';
      }
    }
  }

  async function initializeMap() {
    const mapElement = document.getElementById('map');
    if (!mapElement) return;

    if (!map) {
      map = L.map('map', {
        center: [-33.45, -70.68],
        zoom: 15,
        zoomControl: true,
        maxZoom: 19,
        minZoom: 13,
        scrollWheelZoom: true,
      });

      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors',
        maxZoom: 19,
      }).addTo(map);
    }

    try {
      const response = await fetch('/salas.json');
      salas = await response.json();

      const searchInput = document.getElementById('search-input');
      if (searchInput) {
        searchInput.addEventListener('input', handleSearchInput);

        // Cerrar resultados al hacer clic fuera
        document.addEventListener('click', (e) => {
          if (!e.target.closest('.search-container')) {
            document.getElementById('results-list').style.display = 'none';
          }
        });

        // Manejar tecla Escape
        searchInput.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') {
            document.getElementById('results-list').style.display = 'none';
          }
        });
      }
    } catch (error) {
      console.error('Error al cargar las salas:', error);
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMap);
  } else {
    initializeMap();
  }

  document.addEventListener('astro:page-load', () => {
    initializeMap();
  });

  document.addEventListener('astro:before-preparation', () => {
    if (map) {
      map.remove();
      map = null;
    }
  });
</script>

<Base meta_title="Buscador Salas">
  <Page title="Buscador de Salas">
    <div class="sala-picker-container">
      <div class="search-container">
        <label for="search-input">Buscar sala:</label>
        <input type="text" id="search-input" placeholder="Escribe el nombre de la sala..." autocomplete="off" />
        <div id="results-list"></div>
      </div>
      <a id="gmaps-link" class="btn-gmaps" target="_blank" rel="noopener noreferrer"> Ver ubicación en Google Maps</a>
    </div>
    <div id="map"></div>
    <div class="created-by">
      <span>Created by:</span>
      <a href="https://github.com/JaimeRiquelme" target="_blank" rel="noopener noreferrer" style="margin: 0 8px; display: inline-flex; align-items: center; text-decoration: none;">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 50 50" style="margin-right:4px;" fill="currentColor">
          <path d="M17.791,46.836C18.502,46.53,19,45.823,19,45v-5.4c0-0.197,0.016-0.402,0.041-0.61C19.027,38.994,19.014,38.997,19,39 c0,0-3,0-3.6,0c-1.5,0-2.8-0.6-3.4-1.8c-0.7-1.3-1-3.5-2.8-4.7C8.9,32.3,9.1,32,9.7,32c0.6,0.1,1.9,0.9,2.7,2c0.9,1.1,1.8,2,3.4,2 c2.487,0,3.82-0.125,4.622-0.555C21.356,34.056,22.649,33,24,33v-0.025c-5.668-0.182-9.289-2.066-10.975-4.975 c-3.665,0.042-6.856,0.405-8.677,0.707c-0.058-0.327-0.108-0.656-0.151-0.987c1.797-0.296,4.843-0.647,8.345-0.714 c-0.112-0.276-0.209-0.559-0.291-0.849c-3.511-0.178-6.541-0.039-8.187,0.097c-0.02-0.332-0.047-0.663-0.051-0.999 c1.649-0.135,4.597-0.27,8.018-0.111c-0.079-0.5-0.13-1.011-0.13-1.543c0-1.7,0.6-3.5,1.7-5c-0.5-1.7-1.2-5.3,0.2-6.6 c2.7,0,4.6,1.3,5.5,2.1C21,13.4,22.9,13,25,13s4,0.4,5.6,1.1c0.9-0.8,2.8-2.1,5.5-2.1c1.5,1.4,0.7,5,0.2,6.6c1.1,1.5,1.7,3.2,1.6,5 c0,0.484-0.045,0.951-0.11,1.409c3.499-0.172,6.527-0.034,8.204,0.102c-0.002,0.337-0.033,0.666-0.051,0.999 c-1.671-0.138-4.775-0.28-8.359-0.089c-0.089,0.336-0.197,0.663-0.325,0.98c3.546,0.046,6.665,0.389,8.548,0.689 c-0.043,0.332-0.093,0.661-0.151,0.987c-1.912-0.306-5.171-0.664-8.879-0.682C35.112,30.873,31.557,32.75,26,32.969V33 c2.6,0,5,3.9,5,6.6V45c0,0.823,0.498,1.53,1.209,1.836C41.37,43.804,48,35.164,48,25C48,12.318,37.683,2,25,2S2,12.318,2,25 C2,35.164,8.63,43.804,17.791,46.836z"></path>
        </svg>
        JaimeRiquelme
      </a>
      <a href="https://github.com/solarc3" target="_blank" rel="noopener noreferrer" style="margin: 0 8px; display: inline-flex; align-items: center; text-decoration: none;">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 50 50" style="margin-right:4px;" fill="currentColor">
          <path d="M17.791,46.836C18.502,46.53,19,45.823,19,45v-5.4c0-0.197,0.016-0.402,0.041-0.61C19.027,38.994,19.014,38.997,19,39 c0,0-3,0-3.6,0c-1.5,0-2.8-0.6-3.4-1.8c-0.7-1.3-1-3.5-2.8-4.7C8.9,32.3,9.1,32,9.7,32c0.6,0.1,1.9,0.9,2.7,2c0.9,1.1,1.8,2,3.4,2 c2.487,0,3.82-0.125,4.622-0.555C21.356,34.056,22.649,33,24,33v-0.025c-5.668-0.182-9.289-2.066-10.975-4.975 c-3.665,0.042-6.856,0.405-8.677,0.707c-0.058-0.327-0.108-0.656-0.151-0.987c1.797-0.296,4.843-0.647,8.345-0.714 c-0.112-0.276-0.209-0.559-0.291-0.849c-3.511-0.178-6.541-0.039-8.187,0.097c-0.02-0.332-0.047-0.663-0.051-0.999 c1.649-0.135,4.597-0.27,8.018-0.111c-0.079-0.5-0.13-1.011-0.13-1.543c0-1.7,0.6-3.5,1.7-5c-0.5-1.7-1.2-5.3,0.2-6.6 c2.7,0,4.6,1.3,5.5,2.1C21,13.4,22.9,13,25,13s4,0.4,5.6,1.1c0.9-0.8,2.8-2.1,5.5-2.1c1.5,1.4,0.7,5,0.2,6.6c1.1,1.5,1.7,3.2,1.6,5 c0,0.484-0.045,0.951-0.11,1.409c3.499-0.172,6.527-0.034,8.204,0.102c-0.002,0.337-0.033,0.666-0.051,0.999 c-1.671-0.138-4.775-0.28-8.359-0.089c-0.089,0.336-0.197,0.663-0.325,0.98c3.546,0.046,6.665,0.389,8.548,0.689 c-0.043,0.332-0.093,0.661-0.151,0.987c-1.912-0.306-5.171-0.664-8.879-0.682C35.112,30.873,31.557,32.75,26,32.969V33 c2.6,0,5,3.9,5,6.6V45c0,0.823,0.498,1.53,1.209,1.836C41.37,43.804,48,35.164,48,25C48,12.318,37.683,2,25,2S2,12.318,2,25 C2,35.164,8.63,43.804,17.791,46.836z"></path>
        </svg>
        solarc3
      </a>
    </div>
  </Page>
</Base>
