---
import Base from "@layouts/Base.astro";
import Page from "@layouts/Page.astro";
---

<style>
  .sala-picker-container {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 20px;
  }

  label {
    font-weight: 500;
    color: #ccc;
  }

  select {
    height: 2rem;
    padding: 0 8px;
    border: 1px solid #555;
    background-color: #222;
    color: #fff;
    border-radius: 4px;
    font-size: 1rem;
  }

  .btn-gmaps {
    display: none; /* hidden by default */
    text-decoration: none;
    padding: 0.5rem 1rem;
    background-color: #f90;
    color: #000;
    border-radius: 4px;
    font-weight: 600;
    transition: background-color 0.3s;
  }

  .btn-gmaps:hover {
    background-color: #ffb233;
  }

  #map {
    height: 400px;
    width: 100%;
    border: 1px solid #444;
    border-radius: 6px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  import L from 'leaflet';
  import 'leaflet/dist/leaflet.css';

  let map;
  let marcadorActual = null;
  let salas = [];

  function handleSalaChange(event) {
    const selectedSalaName = event.target.value;
    const gmapsLink = document.getElementById("gmaps-link");

    // Si no hay sala seleccionada
    if (!selectedSalaName) {
      if (gmapsLink) gmapsLink.style.display = "none";
      if (marcadorActual) {
        map.removeLayer(marcadorActual);
        marcadorActual = null;
      }
      return;
    }

    // Encontrar la sala seleccionada
    const selectedSala = salas.find((sala) => sala.name === selectedSalaName);
    if (!selectedSala) return;

    const [lng, lat] = selectedSala.cords;

    // Centrar el mapa en la ubicación
    if (map) {
      map.setView([lat, lng], 18);

      // Eliminar marcador anterior si existe
      if (marcadorActual) {
        map.removeLayer(marcadorActual);
      }

      // Crear nuevo marcador
      marcadorActual = L.marker([lat, lng]).addTo(map);
      marcadorActual.bindPopup(`
        <div style="text-align: center; padding: 5px;">
          <strong>${selectedSala.name}</strong><br>
          <small>${selectedSala.name}</small>
        </div>
      `).openPopup();

      // Actualizar y mostrar el botón de Google Maps
      if (gmapsLink) {
        gmapsLink.href = `https://www.google.com/maps?q=${lat},${lng}`;
        gmapsLink.style.display = "inline-block";
      }
    }
  }

  async function initializeMap() {
    const mapElement = document.getElementById('map');
    if (!mapElement) return;

    // Inicializar el mapa solo si no está ya inicializado
    if (!map) {
      map = L.map('map').setView([-33.450, -70.680], 15);
      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '© OpenStreetMap contributors',
        maxZoom: 19
      }).addTo(map);
    }

    try {
      // Cargar las salas
      const response = await fetch('/salas.json');
      salas = await response.json();

      // Poblar el dropdown
      const selectElement = document.querySelector('#sala-select');
      if (selectElement && selectElement.children.length <= 1) {
        salas.forEach((sala) => {
          const option = document.createElement('option');
          option.value = sala.name;
          option.textContent = sala.name;
          selectElement.appendChild(option);
        });

        // Asegurarse de que el event listener solo se agrega una vez
        selectElement.removeEventListener('change', handleSalaChange);
        selectElement.addEventListener('change', handleSalaChange);
      }
    } catch (error) {
      console.error('Error al cargar las salas:', error);
    }
  }

  // Inicialización cuando el DOM está listo
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeMap);
  } else {
    initializeMap();
  }

  // Manejo de navegación en Astro
  document.addEventListener('astro:page-load', () => {
    initializeMap();
  });

  // Limpieza al salir de la página
  document.addEventListener('astro:before-preparation', () => {
    if (map) {
      map.remove();
      map = null;
    }
  });
</script>

<Base meta_title="Buscador Salas">
  <Page title="Buscador de Salas">
    <div class="sala-picker-container">
      <label for="sala-select">Selecciona una sala:</label>
      <select id="sala-select">
        <option value="">-- Selecciona una sala --</option>
      </select>
      <a
        id="gmaps-link"
        class="btn-gmaps"
        target="_blank"
        rel="noopener noreferrer"
      >
        Ver ubicación en Google Maps
      </a>
    </div>
    <div id="map"></div>
  </Page>
</Base>