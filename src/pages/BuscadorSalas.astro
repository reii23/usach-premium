---
import Base from "@layouts/Base.astro";
import Page from "@layouts/Page.astro";
---

<style>
    .sala-picker-container {
      display: flex;
      flex-wrap: wrap; /* Permite que los elementos se envuelvan en pantallas pequeñas */
      align-items: center;
      gap: 12px;
      margin-bottom: 20px;
    }
  
    label {
      font-weight: 500;
      color: #ccc;
    }
  
    select {
      flex: 1; /* Permite que el select crezca y se ajuste */
      min-width: 200px; /* Ancho mínimo para mantener la usabilidad */
      height: 2rem;
      padding: 0 8px;
      border: 1px solid #555;
      background-color: #222;
      color: #fff;
      border-radius: 4px;
      font-size: 1rem;
    }
  
    .btn-gmaps {
      display: none;
      text-decoration: none;
      padding: 0.5rem 1rem;
      background-color: #f90;
      color: #000;
      border-radius: 4px;
      font-weight: 600;
      transition: background-color 0.3s;
      white-space: nowrap; /* Evita que el texto del botón se rompa */
    }
  
    .btn-gmaps:hover {
      background-color: #ffb233;
    }
  
    #map {
      height: 400px;
      width: 100%;
      border: 1px solid #444;
      border-radius: 6px;
      overflow: hidden;
    }
  
    /* Media queries para dispositivos móviles */
    @media (max-width: 768px) {
      .sala-picker-container {
        flex-direction: column; /* Apila los elementos verticalmente */
        align-items: stretch; /* Estira los elementos al ancho completo */
      }
  
      label {
        margin-bottom: 4px;
      }
  
      select {
        width: 100%;
      }
  
      .btn-gmaps {
        width: 100%; /* Botón a ancho completo en móviles */
        text-align: center;
      }
    }
  </style>

<script>
  import L from 'leaflet';
  import 'leaflet/dist/leaflet.css';

  let map;
  let marcadorActual = null;
  let salas = [];

  // Called whenever the user changes the <select>
  function handleSalaChange(event) {
    const selectedSalaName = event.target.value;
    const gmapsLink = document.getElementById("gmaps-link");

    // If no sala is selected, hide the button, clear marker, etc.
    if (!selectedSalaName) {
      gmapsLink.style.display = "none";
      if (marcadorActual) {
        map.removeLayer(marcadorActual);
        marcadorActual = null;
      }
      return;
    }

    // Otherwise find the sala
    const selectedSala = salas.find((sala) => sala.name === selectedSalaName);
    if (!selectedSala) return; // Guard if not found

    const [lng, lat] = selectedSala.cords;
    map.setView([lat, lng], 18);

    // Remove old marker
    if (marcadorActual) {
      map.removeLayer(marcadorActual);
    }
    // Create new marker
    marcadorActual = L.marker([lat, lng]).addTo(map);

    // Build a Google Maps link
    const googleMapsUrl = `https://www.google.com/maps?q=${lat},${lng}`;

    // Bind a popup on the marker with more info
    marcadorActual
      .bindPopup(`
        <div style="text-align: center; padding: 5px;">
          <strong>${selectedSala.name}</strong><br>
          <small>${selectedSala.name}</small>
        </div>
      `)
      .openPopup();

    // Show the link-button, set its href
    gmapsLink.href = googleMapsUrl;
    gmapsLink.style.display = "inline-block";
  }

  document.addEventListener('DOMContentLoaded', async () => {
    // 1) Initialize Leaflet map
    map = L.map('map').setView([-33.450, -70.680], 15);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '© OpenStreetMap contributors'
    }).addTo(map);

    // 2) Fetch the salas.json
    const response = await fetch('/salas.json');
    salas = await response.json();

    // 3) Populate the dropdown
    const selectElement = document.querySelector('#sala-select');
    salas.forEach((sala) => {
      const option = document.createElement('option');
      option.value = sala.name;
      option.textContent = sala.name;
      selectElement.appendChild(option);
    });

    // 4) On change, handle marker placement
    selectElement.addEventListener('change', handleSalaChange);
  });
</script>

<Base meta_title="Buscador Salas">
  <Page title="Buscador de Salas">
    <div class="sala-picker-container">
      <label for="sala-select">Selecciona una sala:</label>
      <select id="sala-select">
        <option value="">-- Selecciona una sala --</option>
      </select>
      <a
        id="gmaps-link"
        class="btn-gmaps"
        target="_blank"
        rel="noopener noreferrer"
      >
        Ver ubicación en Google Maps
      </a>
    </div>
    <div id="map"></div>
  </Page>
</Base>